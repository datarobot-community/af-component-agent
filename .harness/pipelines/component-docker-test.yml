pipeline:
  name: Component Docker Test
  identifier: component_docker_test
  projectIdentifier: afcomponentagent
  orgIdentifier: No_Code_Apps
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: account.svc_harness_git1
        repoName: af-component-agent
        build: <+input>
  stages:
    - stage:
        name: Docker Prod Build and Test
        identifier: Docker_Prod_Build_and_Test
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          caching:
            enabled: true
            override: false
          buildIntelligence:
            enabled: true
          execution:
            steps:
              - step:
                  type: Background
                  name: start docker in docker
                  identifier: start_docker_in_docker
                  spec:
                    connectorRef: account.dockerhub_datarobot_read
                    image: docker:dind
                    shell: Sh
              - step:
                  type: Run
                  name: wait for docker in docker
                  identifier: wait_for_docker_in_docker
                  spec:
                    connectorRef: account.dockerhub_datarobot_read
                    image: docker:24.0-cli
                    shell: Sh
                    command: |-
                      while ! docker ps ;do
                          echo "Docker not available yet"
                          sleep 1
                      done
                      echo "Docker Service Ready"
                      docker ps
              - step:
                  type: GitClone
                  name: Checkout af-component-agent
                  identifier: Checkout_afcomponentagent
                  spec:
                    connectorRef: account.svc_harness_git1
                    repoName: af-component-agent
                    cloneDirectory: /harness/af-component-agent
                    build:
                      type: branch
                      spec:
                        branch: <+trigger.branch>
          infrastructure:
            type: KubernetesDirect
            spec:
              connectorRef: account.cigeneral
              namespace: harness-delegate-ng
              automountServiceAccountToken: true
              nodeSelector: {}
              os: Linux
