---
# https://taskfile.dev
# THIS FILE MUST BE SOURCED FROM ANOTHER TASKFILE IN THE ROOT DIRECTORY
version: '3'
vars:
  # Cross-platform environment cleaning - uses 'env -u' on Unix systems, falls back to empty string on Windows
  CLEAN_PYTHON_ENV:
    sh: |
      if command -v env >/dev/null 2>&1; then
        echo "env -u PYTHONPATH -u VIRTUAL_ENV"
      else
        echo ""
      fi
tasks:
  install:
    silent: true
    desc: üõ†Ô∏è [infra] Install infra uv dependencies
    cmds:
      - echo "Updating local dependencies for infra"
      - uv sync --quiet
  lint:
    silent: true
    # desc: "üßπ Run linters"
    cmds:
      - echo "üßπ Running linters.."
      - uv run ruff format .
      - uv run ruff check . --fix
      - uv run mypy --pretty .
  lint-check:
    silent: true
    # desc: "üßπ Check whether the codebase is linted"
    cmds:
      - uv run ruff format --check .
      - uv run ruff check .
      - uv run mypy --pretty .
  ensure-pulumi-stack-variable-presence:
    silent: true
    # desc: "Ensure pulumi stack variable is initialized in the .env file"
    cmds:
      - uv run ../infra/setup_dotenv_variable.py --restart --var-name PULUMI_STACK --prompt-message "Enter your your project name" --default "dev"       
  info:
    silent: true
    # desc: "‚ÑπÔ∏è Show Pulumi stack info"
    cmds:
      - task: ensure-pulumi-stack-variable-presence
      - uv run pulumi stack
  info-build:
    silent: true
    # desc: "‚ÑπÔ∏è Show Pulumi stack info for the build stack"
    cmds:
      - task: ensure-pulumi-stack-variable-presence
      - "uv run pulumi stack --stack {% raw %}{{.PULUMI_STACK}}{% endraw %}-build"
  build:
    desc: "üîµ Deploy only playground testing resources with pulumi"
    env:
      AGENT_DEPLOY: 0
    cmds:
      - echo "[infra] Running pulumi up with [BUILD] mode"
      - task: ensure-pulumi-stack-variable-presence
      - "{% raw %}{{.CLEAN_PYTHON_ENV}}{% endraw %} uv run pulumi up --stack {% raw %}{{.PULUMI_STACK}}{% endraw %}-build {% raw %}{{.CLI_ARGS}}{% endraw %}"
    silent: true
  deploy:
    desc: "üü¢ Deploy all resources with pulumi"
    env:
      AGENT_DEPLOY: 1
    cmds:
      - echo "Running pulumi up with [DEPLOY] mode"
      - task: ensure-pulumi-stack-variable-presence
      - "{% raw %}{{.CLEAN_PYTHON_ENV}}{% endraw %} uv run pulumi up {% raw %}{{.CLI_ARGS}}{% endraw %}"
    silent: true
  refresh:
    desc: "‚ö™Ô∏è Refresh and sync local pulumi state"
    cmds:
      - echo "Running pulumi refresh"
      - task: ensure-pulumi-stack-variable-presence
      - "{% raw %}{{.CLEAN_PYTHON_ENV}}{% endraw %} uv run pulumi refresh {% raw %}{{.CLI_ARGS}}{% endraw %}"
    silent: true
  refresh-build:
    desc: "‚ö™Ô∏è Refresh and sync local pulumi state for the build stack"
    cmds:
      - echo "Running pulumi refresh for the build stack"
      - task: ensure-pulumi-stack-variable-presence
      - "{% raw %}{{.CLEAN_PYTHON_ENV}}{% endraw %} uv run pulumi refresh --stack {% raw %}{{.PULUMI_STACK}}{% endraw %}-build {% raw %}{{.CLI_ARGS}}{% endraw %}"
    silent: true
  destroy:
    desc: "üî¥ Teardown all deployed resources with pulumi"
    cmds:
      - echo "Running pulumi destroy"
      - task: ensure-pulumi-stack-variable-presence
      - "{% raw %}{{.CLEAN_PYTHON_ENV}}{% endraw %} uv run pulumi destroy {% raw %}{{.CLI_ARGS}}{% endraw %}"
      - "{% raw %}{{.CLEAN_PYTHON_ENV}}{% endraw %} uv run pulumi destroy --stack {% raw %}{{.PULUMI_STACK}}{% endraw %}-build {% raw %}{{.CLI_ARGS}}{% endraw %}"
    silent: true
