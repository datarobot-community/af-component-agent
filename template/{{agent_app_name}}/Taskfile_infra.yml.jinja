---
# https://taskfile.dev
# THIS FILE MUST BE SOURCED FROM ANOTHER TASKFILE IN THE ROOT DIRECTORY
version: '3'
vars:
  # Cross-platform environment cleaning - uses 'env -u' on Unix systems, falls back to empty string on Windows
  CLEAN_PYTHON_ENV:
    sh: |
      if command -v env >/dev/null 2>&1; then
        echo "env -u PYTHONPATH -u VIRTUAL_ENV"
      else
        echo ""
      fi
  PULUMI_STACK_COMMAND:
    sh: |
      if [ -n "${PULUMI_STACK_NAME:-}" ]; then
        echo "--stack $PULUMI_STACK_NAME"
      else
        echo ""
      fi
tasks:
  install:
    silent: true
    desc: üõ†Ô∏è [infra] Install infra uv dependencies
    cmds:
      - echo "Updating local dependencies for infra"
      - uv sync --quiet
  lint:
    silent: true
    # desc: "üßπ Run linters"
    cmds:
      - echo "üßπ Running linters.."
      - uv run ruff format .
      - uv run ruff check . --fix
      - uv run mypy --pretty .
  lint-check:
    silent: true
    # desc: "üßπ Check whether the codebase is linted"
    cmds:
      - uv run ruff format --check .
      - uv run ruff check .
      - uv run mypy --pretty .
  test:
    # Hidden to avoid showing in task list, run `task --list-all` to see it
    # desc: üß™ [infra] Run tests
    cmds:
      - echo "Running pytest on tests"
      - "{% raw %}{{.CLEAN_PYTHON_ENV}}{% endraw %} uv run pytest -vv ./tests/"
    silent: true
  test-coverage:
    # Hidden to avoid showing in task list, run `task --list-all` to see it
    # desc: üß™ [infra] Run tests with coverage
    cmds:
      - echo "Running pytest on tests"
      - "{% raw %}{{.CLEAN_PYTHON_ENV}}{% endraw %} uv run pytest -vv --cov --cov-report=html --cov-report=term --cov-report xml:.coverage.xml ./tests/"
    silent: true
  init:
    silent: true
    # desc: "üÜï Initialize a new Pulumi stack"
    cmds:
      - uv run pulumi stack init
  pulumi:
    silent: true
    # desc: "Generic pulumi execution command with env variables"
    cmds:
      - uv run pulumi {% raw %}{{.CLI_ARGS}}{% endraw %}
  select:
    silent: true
    # desc: "üöÇ Select a Stack"
    cmds:
      - uv run pulumi stack select
  select-env-stack:
    silent: true
    cmds:
      - |
        if [ -n "${PULUMI_STACK_NAME:-}" ]; then
          {% raw %}{{.CLEAN_PYTHON_ENV}}{% endraw %} uv run pulumi stack select -c $PULUMI_STACK_NAME
        fi
  info:
    silent: true
    # desc: "‚ÑπÔ∏è Show Pulumi stack info"
    cmds:
      - task: select-env-stack
      - uv run pulumi stack {% raw %}{{.PULUMI_STACK_COMMAND}}{% endraw %}
  build:
    desc: "üîµ Deploy only playground testing resources with pulumi"
    env:
      AGENT_DEPLOY: 0
    cmds:
      - echo "[infra] Running pulumi up with [BUILD] mode"
      - task: select-env-stack
      - "{% raw %}{{.CLEAN_PYTHON_ENV}}{% endraw %} uv run pulumi up {% raw %}{{.PULUMI_STACK_COMMAND}}{% endraw %} {% raw %}{{.CLI_ARGS}}{% endraw %}"
    silent: true
  deploy:
    desc: "üü¢ Deploy all resources with pulumi"
    env:
      AGENT_DEPLOY: 1
    cmds:
      - echo "Running pulumi up with [DEPLOY] mode"
      - task: select-env-stack
      - "{% raw %}{{.CLEAN_PYTHON_ENV}}{% endraw %} uv run pulumi up {% raw %}{{.PULUMI_STACK_COMMAND}}{% endraw %} {% raw %}{{.CLI_ARGS}}{% endraw %}"
    silent: true
  refresh:
    desc: "‚ö™Ô∏è Refresh and sync local pulumi state"
    cmds:
      - echo "Running pulumi refresh"
      - task: select-env-stack
      - "{% raw %}{{.CLEAN_PYTHON_ENV}}{% endraw %} uv run pulumi refresh {% raw %}{{.PULUMI_STACK_COMMAND}}{% endraw %} {% raw %}{{.CLI_ARGS}}{% endraw %}"
    silent: true
  destroy:
    desc: "üî¥ Teardown all deployed resources with pulumi"
    cmds:
      - echo "Running pulumi destroy"
      - task: select-env-stack
      - "{% raw %}{{.CLEAN_PYTHON_ENV}}{% endraw %} uv run pulumi destroy {% raw %}{{.PULUMI_STACK_COMMAND}}{% endraw %} {% raw %}{{.CLI_ARGS}}{% endraw %}"
    silent: true
