# Copyright 2025 DataRobot, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import re
import textwrap
from typing import Sequence

import pulumi
import pulumi_datarobot
from datarobot_pulumi_utils.schema.apps import ApplicationSourceArgs
from datarobot_pulumi_utils.schema.apps import CustomAppResourceBundles
from datarobot_pulumi_utils.schema.exec_envs import RuntimeEnvironments
from datarobot_pulumi_utils.pulumi.stack import PROJECT_NAME

from . import use_case, project_dir

EXCLUDE_PATTERNS = [
    re.compile(pattern)
    for pattern in [
        r"tests.*",
        r"\.coverage",
        r".*\.DS_Store",
        r".*\.pyc",
        r"\.ruff_cache.*",
        r"\.venv.*",
        r"\.mypy_cache.*",
        r"__pycache__.*",
        r"\.pytest_cache.*",
    ]
]


__all__ = [
    "{{agent_app_name}}_app",
    "{{agent_app_name}}_app_env_name",
    "{{agent_app_name}}_app_resource_name",
    "{{agent_app_name}}_app_runtime_parameters",
    "{{agent_app_name}}_app_source",
    "{{agent_app_name}}_application_path",
    "get_{{agent_app_name}}_app_files",
]


def _prep_metadata_yaml(
    runtime_parameter_values: Sequence[
        pulumi_datarobot.ApplicationSourceRuntimeParameterValueArgs
        | pulumi_datarobot.CustomModelRuntimeParameterValueArgs
    ],
) -> None:
    from jinja2 import BaseLoader, Environment

    runtime_parameter_specs = "\n".join(
        [
            textwrap.dedent(
                f"""\
            - fieldName: {param.key}
              type: {param.type}
        """
            )
            for param in runtime_parameter_values
        ]
    )
    if not runtime_parameter_specs:
        runtime_parameter_specs = "    []"
    with open({{agent_app_name}}_application_path / "metadata.yaml.jinja") as f:
        template = Environment(loader=BaseLoader()).from_string(f.read())
    ({{agent_app_name}}_application_path / "metadata.yaml").write_text(
        template.render(
            additional_params=runtime_parameter_specs,
        )
    )


def get_{{agent_app_name}}_app_files(
    runtime_parameter_values: Sequence[
        pulumi_datarobot.ApplicationSourceRuntimeParameterValueArgs
        | pulumi_datarobot.CustomModelRuntimeParameterValueArgs,
    ],
) -> list[tuple[str, str]]:
    _prep_metadata_yaml(runtime_parameter_values)
    # Get all files from application path
    source_files = [
        (f.as_posix(), f.relative_to({{agent_app_name}}_application_path).as_posix())
        for f in {{agent_app_name}}_application_path.glob("**/*")
        if f.is_file() and "metadata.yaml" not in f.name
    ]

    # Add the metadata.yaml file
    source_files.append(
        (({{agent_app_name}}_application_path / "metadata.yaml").as_posix(), "metadata.yaml")
    )
    source_files = [
        (file_path, file_name)
        for file_path, file_name in source_files
        if not any(
            exclude_pattern.match(file_name) for exclude_pattern in EXCLUDE_PATTERNS
        )
    ]

    return source_files


# Start of Pulumi settings and application infrastructure
{{agent_app_name}}_app_env_name: str = "DATAROBOT_APPLICATION_ID"
{{agent_app_name}}_application_path = project_dir.parent / "{{agent_app_name}}"

{{agent_app_name}}_app_source_args = ApplicationSourceArgs(
    resource_name=f"{{ _external_data.base.template_name }} [{PROJECT_NAME}]",
    base_environment_id=RuntimeEnvironments.PYTHON_312_APPLICATION_BASE.value.id,
).model_dump(mode="json", exclude_none=True)

{{agent_app_name}}_app_resource_name: str = f"{{ _external_data.base.template_name }} [{PROJECT_NAME}]"
{{agent_app_name}}_app_runtime_parameters: list[
    pulumi_datarobot.ApplicationSourceRuntimeParameterValueArgs
] = []

{{agent_app_name}}_app_source = pulumi_datarobot.ApplicationSource(
    files=get_{{agent_app_name}}_app_files(runtime_parameter_values={{agent_app_name}}_app_runtime_parameters),
    runtime_parameter_values={{agent_app_name}}_app_runtime_parameters,
    resources=pulumi_datarobot.ApplicationSourceResourcesArgs(
        resource_label=CustomAppResourceBundles.CPU_XL.value.id,
    ),
    **{{agent_app_name}}_app_source_args,
)

{{agent_app_name}}_app = pulumi_datarobot.CustomApplication(
    resource_name={{agent_app_name}}_app_resource_name,
    source_version_id={{agent_app_name}}_app_source.version_id,
    use_case_ids=[use_case.id],
    allow_auto_stopping=True,
)

pulumi.export({{agent_app_name}}_app_env_name, {{agent_app_name}}_app.id)
pulumi.export(
    {{agent_app_name}}_app_resource_name,
    {{agent_app_name}}_app.application_url,
)
